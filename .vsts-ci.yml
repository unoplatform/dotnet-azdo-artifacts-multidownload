jobs:
- job: Windows

  pool:
    name: Hosted
    
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - checkout: self
    clean: true
    
  - task: UseDotNet@2
    displayName: 'Use .Net Core runtime 6.0.4'
    retryCountOnTaskFailure: 3
    inputs:
      packageType: runtime
      version: 6.0.4
      installationPath: '${{parameters.dotnetInstallationPath}}'

  - task: gitversion/setup@0
    retryCountOnTaskFailure: 3
    inputs:
      versionSpec: '5.10.3'

  - task: gitversion/execute@0
    retryCountOnTaskFailure: 3
    inputs:
      updateAssemblyInfo: 'False'
      useConfigFile: true
      configFilePath: gitversion.yml
    displayName: Use GitVersion

  - task: UseDotNet@2
    displayName: 'Use .NET 5.0.103 SDK'
    inputs:
      version: 5.0.103

  - task: DotNetCoreCLI@2
    displayName: .NET Core Build
    inputs:
      command: build
      arguments: --configuration Release  "/p:PackageOutputPath=$(build.artifactstagingdirectory)\nuget" "-p:PackageVersion=$(GITVERSION.FullSemVer)" "/p:InformationalVersion=$(GITVERSION.InformationalVersion)" /detailedsummary
      workingDirectory: $(build.sourcesdirectory)\src

  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.1.504'

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno.PackageDiff"
      SignPackageDescription: "Uno.PackageDiff"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: drop
      ArtifactType: Container
      
  - task: DotNetCoreCLI@2
    displayName: .NET Core Build
    inputs:
      command: run
      arguments: --configuration Release --output-path=$(build.sourcesdirectory)\output --pat=$(System.AccessToken) --source-branch="$(Build.SourceBranch)" --artifact-name="drop" --definition-name="$(Build.DefinitionName)" --project-name="$(System.TeamProject)" --server-uri="$(System.TeamFoundationCollectionUri)" --current-build="$(Build.BuildId)" --run-limit="2"
      workingDirectory: $(build.sourcesdirectory)\src\dotnet-azdo-artifacts-multidownload

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.sourcesdirectory)\output
      ArtifactName: drop-validation
      ArtifactType: Container
